@using Todo.Core.Entities
@using Todo.Domain
@model ServiceResult
@{
    var taskPriorities = (List<TaskPriority>)Model.Result;
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <form action="#" class="">
            <div class="panel panel-default" style="margin-top:50px;">
                <div class="panel-heading">ToDo List</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <div class="input-group-btn">
                                        <button type="button" id="btnTaskPriority" class="btn btn-default dropdown-toggle" data-value="1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span id="spnTaskPriority">Normal</span> <span class="caret"></span></button>
                                        <ul class="dropdown-menu">
                                            @foreach (var item in taskPriorities)
                                            {
                                                <li><a href="#" class="aTaskPriority" data-bg-color="@item.BgColor" data-value="@item.Id" data-text="@item.Name">@item.Name</a></li>
                                            }
                                        </ul>
                                    </div>
                                    <input type="text" id="txtName" class="form-control" placeholder="What needs to be done?" aria-label="...">

                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="btnAddTask" type="button" aria-label="Left Align"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button>
                                    </span>

                                </div>
                            </div>
                        </div>

                        <div id="divTasks" class="col-lg-12">
                            @await Component.InvokeAsync("Tasks", 1)
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {

            $(document).on("click", ".aTaskPriority", function () {
                var currentPriority = $(this);
                $("#spnTaskPriority").text(currentPriority.data("text"));
                ChangePriorityButtonClass(currentPriority.attr("data-bg-color"));
                $("#btnTaskPriority").data("value", currentPriority.data("value"));
            });

            $(document).on("click", ".aTaskStatus", function () {
                $(".aTaskStatus").each(function (i, item) {
                    $(item).parent().removeClass("active");
                });
                $(this).parent().addClass("active");
            });

            $(document).on("click", ".aTaskStatus", function () {
                var currentElement = $(this);
                $(".aTaskStatus").each(function (i, item) {
                    $(item).parent().removeClass("active");
                });
                $(this).parent().addClass("active");
                GetTasks(currentElement.data("status-id"));
            });

            $('#txtName').keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    AddTask();
                }
            });

            $(document).on("click", ".btnUpdateTask", function () {
                var taskId = $(this).data("value");
                var param = { TaskId: taskId, Name: $("#txtName_" + taskId).val() };
                UpdateTask(param);
            });

            $(document).on("click", ".btnUpdateTaskStatus", function () {
                var taskId = $(this).data("value");
                var statusId = $(this).data("status-id");
                var param = { TaskId: taskId, TaskStatusId: statusId };
                UpdateTask(param);
            });

            $(document).on("click", "#btnAddTask", function () {
                AddTask();
            });

            function GetTasks(statusId) {
                $.get("/Home/GetTasks?statusId=" + statusId, function (data) { $("#divTasks").empty().html(data); });
            }

            function UpdateTask(param) {
                AjaxMethod(true
                    , "/Home/UpdateTask", function (data) {
                        GetTasks(1);
                    }, function (err) {
                        console.log(err);
                    }, param);
            }

            function AddTask() {
                var param = { Name: $("#txtName").val(), TaskPriorityId: $("#btnTaskPriority").data("value") };

                AjaxMethod(true
                    , "/Home/AddTask", function (data) {
                        if (data.MessageType == 1) {
                            $("#txtName").val("");
                            $("#btnTaskPriority").data("value", "1");
                            $("#spnTaskPriority").text("Normal");
                            ChangePriorityButtonClass("btn-default");
                            GetTasks(1);
                        }
                    }, function (err) {
                        console.log(err);
                    }, param);
            }

            function ChangePriorityButtonClass(bgclass) {
                var classes = $("#btnTaskPriority").attr("class").split(" ");
                var newClasses = [];
                for (var i = 0; i < classes.length; i++) {
                    r = classes[i].search(/btn-+/);
                    if (r) newClasses[newClasses.length] = classes[i];
                }
                $("#btnTaskPriority").removeClass().addClass(newClasses.join(" ")).addClass(bgclass);
            }

            function AjaxMethod(async, callUrl, fnSuccess, fnError, param) {
                jQuery.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(param),
                    dataType: "json",
                    async: async,
                    url: callUrl,
                    headers: {
                        'Accept-Language': $("#hdDefaultLanguageId").val()
                    },
                    success: fnSuccess,
                    error: fnError
                });
            }
        });

    </script>
}
